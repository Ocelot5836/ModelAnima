buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${project.minecraft}-${project.modVersion}"
group = 'io.github.ocelot' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'model-anima'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: project.mappingsChannel, version: project.mappings

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.test
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.test
                    source sourceSets.main
                }
            }
        }
    }
}

if (project.hasProperty('UPDATE_MAPPINGS')) {
    extractRangeMap {
        sources sourceSets.test.java.srcDirs
    }
    applyRangeMap {
        sources sourceSets.test.java.srcDirs
    }
    sourceSets.test.java.srcDirs.each { extractMappedNew.addTarget it }
}

repositories{
    maven {
        name = "JitPack"
        url = "https://jitpack.io"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft}-${project.forge}"

    testImplementation fg.deobf("com.github.Ocelot5836:Sonar:${project.sonar}")
}

processResources {
    inputs.property("modVersion", project.modVersion)
    inputs.property("modId", project.modId)
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'modVersion': project.modVersion, 'modId': project.modId
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
    manifest {
        attributes(
                'FMLModType': 'LIBRARY'
        )
    }
}

task apiJar(type: Jar) {
    classifier = "api"
    from sourceSets.main.output
    from sourceSets.main.allSource
}

artifacts {
    archives apiJar
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact apiJar
        }
    }
    repositories {
        if (project.hasProperty("jacksonMavenUser") && project.hasProperty("jacksonMavenPass")) {
            maven {
                url "https://maven.jaackson.me"
                credentials {
                    username = project.properties.jacksonMavenUser
                    password = project.properties.jacksonMavenPass
                }
            }
        }
    }
}
